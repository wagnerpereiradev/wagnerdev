'use client';

import Image from 'next/image';
import { motion, useAnimation, useScroll, useTransform } from 'framer-motion';
import { useEffect, useState, useRef } from 'react';
import { useInView } from 'react-intersection-observer';

export default function Profile() {
    // Estados para rastreamento e efeitos
    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
    const [cursorVariant, setCursorVariant] = useState('default');
    const [typingText, setTypingText] = useState('');
    const [isTypingComplete, setIsTypingComplete] = useState(false);
    const [hoverPhoto, setHoverPhoto] = useState(false);

    // Referências para animações baseadas em scroll
    const profileRef = useRef(null);
    const techRef = useRef(null);
    const controls = useAnimation();
    const [techSectionRef, techInView] = useInView({ threshold: 0.2, triggerOnce: true });

    // Efeitos de scroll
    const { scrollYProgress } = useScroll({
        target: profileRef,
        offset: ["start start", "end start"]
    });

    const backgroundOpacity = useTransform(scrollYProgress, [0, 1], [1, 0.5]);
    const contentY = useTransform(scrollYProgress, [0, 1], [0, 100]);

    // Texto para efeito de digitação
    const fullText = 'Desenvolvedor Full Stack especializado em criar experiências digitais modernas e eficientes. Apaixonado por solucionar problemas complexos através de código limpo e interfaces intuitivas.';

    // Efeito para rastrear a posição do mouse
    useEffect(() => {
        const mouseMove = (e: MouseEvent) => {
            setMousePosition({
                x: e.clientX,
                y: e.clientY
            });
        };

        window.addEventListener('mousemove', mouseMove);

        return () => {
            window.removeEventListener('mousemove', mouseMove);
        };
    }, []);

    // Efeito de digitação melhorado
    useEffect(() => {
        let currentIndex = 0;
        let typingSpeed = 25; // Velocidade base de digitação

        const interval = setInterval(() => {
            if (currentIndex <= fullText.length) {
                setTypingText(fullText.slice(0, currentIndex));

                // Variação aleatória na velocidade para simular digitação humana
                if (currentIndex > 0) {
                    const char = fullText[currentIndex - 1];
                    // Pausa mais longa após pontuação
                    if (['.', ',', '!', '?'].includes(char)) {
                        typingSpeed = Math.random() * 150 + 50;
                    } else {
                        typingSpeed = Math.random() * 20 + 20;
                    }
                }

                currentIndex++;
            } else {
                clearInterval(interval);
                setIsTypingComplete(true);
            }
        }, typingSpeed);

        return () => clearInterval(interval);
    }, []);

    // Efeito para animar a seção de tecnologias quando estiver visível
    useEffect(() => {
        if (techInView) {
            controls.start('visible');
        }
    }, [controls, techInView]);

    // Variantes para o cursor personalizado
    const variants = {
        default: {
            x: mousePosition.x - 16,
            y: mousePosition.y - 16,
            opacity: 0.5,
            mixBlendMode: "normal" as const,
        },
        hover: {
            height: 64,
            width: 64,
            x: mousePosition.x - 32,
            y: mousePosition.y - 32,
            backgroundColor: "rgba(61, 67, 221, 0.3)",
            mixBlendMode: "difference" as const,
            opacity: 0.8,
        },
        text: {
            height: 120,
            width: 120,
            x: mousePosition.x - 60,
            y: mousePosition.y - 60,
            backgroundColor: "rgba(61, 67, 221, 0.1)",
            mixBlendMode: "difference" as const,
            opacity: 0.6,
            borderRadius: "40%",
        },
        button: {
            height: 40,
            width: 40,
            x: mousePosition.x - 20,
            y: mousePosition.y - 20,
            backgroundColor: "rgba(255, 255, 255, 0.5)",
            mixBlendMode: "difference" as const,
            opacity: 1,
        }
    };

    // Funções para mudar o estado do cursor
    const textEnter = () => setCursorVariant('text');
    const buttonEnter = () => setCursorVariant('button');
    const defaultCursor = () => setCursorVariant('default');
    const hoverEnter = () => setCursorVariant('hover');

    // Função para controlar o hover na foto
    const photoEnter = () => {
        setHoverPhoto(true);
        textEnter();
    };

    const photoLeave = () => {
        setHoverPhoto(false);
        defaultCursor();
    };

    // Variantes de animação para elementos da interface
    const fadeInUp = {
        hidden: { opacity: 0, y: 20 },
        visible: {
            opacity: 1,
            y: 0,
            transition: { duration: 0.6 }
        }
    };

    const staggerChildren = {
        hidden: { opacity: 0 },
        visible: {
            opacity: 1,
            transition: {
                staggerChildren: 0.1
            }
        }
    };

    const socialLinks = [
        {
            name: 'GitHub',
            icon: (
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    className="w-5 h-5"
                >
                    <path
                        fillRule="evenodd"
                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
                    />
                </svg>
            ),
            url: 'https://github.com/wagnerpereiradev',
            color: '#333',
            hoverColor: '#2b3137',
            hoverScale: 1.1,
        },
        {
            name: 'WhatsApp',
            icon: (
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    className="w-5 h-5"
                >
                    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.095 3.2 5.076 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z" />
                </svg>
            ),
            url: 'https://wa.me/5511943527017',
            color: '#25d366',
            hoverColor: '#128c7e',
            hoverScale: 1.15,
        },
        {
            name: 'Instagram',
            icon: (
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    className="w-5 h-5"
                >
                    <path
                        fillRule="evenodd"
                        d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z"
                        clipRule="evenodd"
                    />
                </svg>
            ),
            url: 'https://instagram.com/wagner.mi6',
            gradient: 'from-[#FFD600] via-[#FF7A00] via-[#FF0069] via-[#D300C5] to-[#7638FA]',
            hoverScale: 1.2,
        },
        {
            name: 'LinkedIn',
            icon: (
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    className="w-5 h-5"
                >
                    <path
                        fillRule="evenodd"
                        d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"
                        clipRule="evenodd"
                    />
                </svg>
            ),
            url: 'https://linkedin.com/in/owrp',
            color: '#0a66c2',
            hoverColor: '#0077b5',
            hoverScale: 1.1,
        },
    ];

    const technologies = [
        { name: 'Next.js', logo: 'https://images.ctfassets.net/23aumh6u8s0i/6pjUKboBuFLvCKkE3esaFA/5f2101d6d2add5c615db5e98a553fc44/nextjs.jpeg', category: 'frontend' },
        { name: 'TypeScript', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Typescript_logo_2020.svg/2048px-Typescript_logo_2020.svg.png', category: 'frontend' },
        { name: 'Tailwind CSS', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Tailwind_CSS_Logo.svg/2560px-Tailwind_CSS_Logo.svg.png', category: 'frontend' },
        { name: 'Framer Motion', logo: 'https://user-images.githubusercontent.com/22095598/123793419-f5528800-d8e1-11eb-8c5f-e2dad45a9c81.png', category: 'frontend' },
        { name: 'Node.js', logo: 'https://cdn-icons-png.flaticon.com/512/5968/5968322.png', category: 'backend' },
        { name: 'AWS S3', logo: 'https://img.icons8.com/m_outlined/600/FFFFFF/amazon-web-services.png', category: 'backend' },
        { name: 'Vite', logo: 'https://raw.githubusercontent.com/vitejs/vite/main/docs/public/logo.svg', category: 'tools' },
        { name: 'Electron', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Electron_Software_Framework_Logo.svg/1200px-Electron_Software_Framework_Logo.svg.png', category: 'tools' },
        { name: 'Android Studio', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Android_Studio_icon_%282023%29.svg/2048px-Android_Studio_icon_%282023%29.svg.png', category: 'mobile' },
        { name: 'WordPress', logo: 'https://upload.wikimedia.org/wikipedia/commons/9/93/Wordpress_Blue_logo.png', category: 'cms' },
        { name: 'OpenAI API', logo: 'https://img.icons8.com/fluent-systems-filled/512/FFFFFF/chatgpt.png', category: 'ai' },
        { name: 'Figma', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Figma-logo.svg/1200px-Figma-logo.svg.png', category: 'design' },
        { name: 'Adobe Illustrator', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Adobe_Illustrator_CC_icon.svg/2101px-Adobe_Illustrator_CC_icon.svg.png', category: 'design' },
        { name: 'Adobe Photoshop', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Adobe_Photoshop_CC_icon.svg/1051px-Adobe_Photoshop_CC_icon.svg.png', category: 'design' },
        { name: 'Vercel', logo: 'https://registry.npmmirror.com/@lobehub/icons-static-png/latest/files/dark/vercel.png', category: 'devops' },
        { name: 'GitHub', logo: 'https://img.icons8.com/ios11/512/FFFFFF/github.png', category: 'devops' },
        { name: 'PNPM', logo: 'https://static-00.iconduck.com/assets.00/file-type-light-pnpm-icon-2048x2048-5ykb4rad.png', category: 'tools' },
    ];

    const techByCategory = technologies.reduce((acc, tech) => {
        if (!acc[tech.category]) {
            acc[tech.category] = [];
        }
        acc[tech.category].push(tech);
        return acc;
    }, {} as Record<string, typeof technologies>);

    const techGlowColors = {
        frontend: "#3d43dd",
        backend: "#38bdf8",
        tools: "#a78bfa",
        mobile: "#4ade80",
        cms: "#fb923c",
        ai: "#f43f5e",
        design: "#fb7185",
        devops: "#64748b"
    };

    return (
        <section id="profile" ref={profileRef} className="py-32 px-4 sm:px-6 lg:px-8 relative overflow-hidden min-h-screen flex items-center">
            {/* Cursor personalizado com efeitos avançados */}
            <motion.div
                className="cursor hidden md:block fixed top-0 left-0 w-8 h-8 bg-[#3d43dd] rounded-full pointer-events-none z-50 mix-blend-difference"
                variants={variants}
                animate={cursorVariant}
                transition={{
                    type: 'spring',
                    stiffness: 500,
                    damping: 28,
                    mass: 0.5
                }}
            />

            {/* Fundo com gradiente refinado e efeito parallax */}
            <motion.div
                className="absolute inset-0"
                style={{ opacity: backgroundOpacity }}
            >
                <div className="absolute inset-0 bg-gradient-to-b from-neutral-950 via-black to-neutral-950">
                    <div className="absolute inset-0 opacity-30 mix-blend-overlay bg-[url('/grid-pattern.svg')]"></div>
                </div>

                {/* Gradientes dinâmicos */}
                <motion.div
                    className="absolute inset-0 bg-gradient-to-r from-[#3d43dd]/5 via-transparent to-[#3d43dd]/5"
                    animate={{
                        background: [
                            "linear-gradient(to right, rgba(61, 67, 221, 0.05), transparent, rgba(61, 67, 221, 0.05))",
                            "linear-gradient(to right, rgba(61, 67, 221, 0.08), transparent, rgba(61, 67, 221, 0.05))",
                            "linear-gradient(to right, rgba(61, 67, 221, 0.05), transparent, rgba(61, 67, 221, 0.08))",
                            "linear-gradient(to right, rgba(61, 67, 221, 0.05), transparent, rgba(61, 67, 221, 0.05))"
                        ]
                    }}
                    transition={{
                        duration: 10,
                        repeat: Infinity,
                        repeatType: "reverse"
                    }}
                />

                {/* Linhas de borda com pulsação */}
                <motion.div
                    className="absolute top-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-[#3d43dd]/20 to-transparent"
                    animate={{
                        opacity: [0.2, 0.5, 0.2],
                        backgroundImage: [
                            "linear-gradient(to right, transparent, rgba(61, 67, 221, 0.2), transparent)",
                            "linear-gradient(to right, transparent, rgba(61, 67, 221, 0.3), transparent)",
                            "linear-gradient(to right, transparent, rgba(61, 67, 221, 0.2), transparent)"
                        ]
                    }}
                    transition={{ duration: 5, repeat: Infinity }}
                />
                <motion.div
                    className="absolute bottom-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-[#3d43dd]/20 to-transparent"
                    animate={{
                        opacity: [0.2, 0.5, 0.2],
                        backgroundImage: [
                            "linear-gradient(to right, transparent, rgba(61, 67, 221, 0.2), transparent)",
                            "linear-gradient(to right, transparent, rgba(61, 67, 221, 0.3), transparent)",
                            "linear-gradient(to right, transparent, rgba(61, 67, 221, 0.2), transparent)"
                        ]
                    }}
                    transition={{ duration: 5, repeat: Infinity, delay: 2.5 }}
                />
            </motion.div>

            {/* Elementos decorativos com animações fluidas */}
            <motion.div
                className="absolute top-20 left-[10%] w-64 h-64 rounded-full bg-[#3d43dd]/5 blur-[100px]"
                animate={{
                    scale: [1, 1.2, 1],
                    opacity: [0.3, 0.7, 0.3],
                    x: [0, 10, 0],
                    y: [0, -10, 0]
                }}
                transition={{
                    duration: 15,
                    repeat: Infinity,
                    repeatType: "reverse"
                }}
            />

            <motion.div
                className="max-w-7xl mx-auto relative z-10 w-full"
                style={{ y: contentY }}
            >
                {/* Card principal do perfil com efeito de vidro */}
                <div className="grid grid-cols-1 lg:grid-cols-12 gap-12 items-center">
                    {/* Coluna da esquerda - Foto e ícones sociais */}
                    <div className="lg:col-span-5 flex flex-col items-center">
                        <motion.div
                            className="relative"
                            initial={{ opacity: 0, scale: 0.8 }}
                            whileInView={{ opacity: 1, scale: 1 }}
                            viewport={{ once: true }}
                            transition={{
                                type: "spring",
                                stiffness: 100,
                                damping: 15,
                                delay: 0.2
                            }}
                        >
                            {/* Círculo decorativo externo com luz pulsante */}
                            <motion.div
                                className="absolute -inset-12 rounded-full bg-gradient-to-r from-[#3d43dd]/10 to-[#6366f1]/10 blur-xl"
                                animate={{
                                    scale: [1, 1.05, 1],
                                    opacity: [0.5, 0.7, 0.5],
                                    rotate: [0, 10, 0],
                                }}
                                transition={{
                                    duration: 15,
                                    repeat: Infinity,
                                    repeatType: "reverse"
                                }}
                            />

                            {/* Círculos orbitais */}
                            <motion.div
                                className="absolute -inset-2 rounded-full border border-[#3d43dd]/10 z-0"
                                animate={{ rotate: 360 }}
                                transition={{
                                    duration: 30,
                                    ease: "linear",
                                    repeat: Infinity
                                }}
                            >
                                <motion.div
                                    className="absolute -right-1 top-1/2 w-3 h-3 bg-[#3d43dd]/30 rounded-full"
                                    animate={{ scale: [1, 1.5, 1] }}
                                    transition={{
                                        duration: 2,
                                        repeat: Infinity,
                                        repeatType: "reverse"
                                    }}
                                />
                            </motion.div>

                            {/* Imagem de perfil com efeitos de hover avançados */}
                            <motion.div
                                className="relative w-64 h-64 lg:w-80 lg:h-80 overflow-hidden rounded-full border-2 border-[#3d43dd]/30 shadow-xl cursor-pointer z-10"
                                whileHover={{
                                    scale: 1.03,
                                    boxShadow: "0 0 30px rgba(61, 67, 221, 0.5)"
                                }}
                                onMouseEnter={photoEnter}
                                onMouseLeave={photoLeave}
                            >
                                <Image
                                    src="https://avatars.githubusercontent.com/u/99822078?v=4"
                                    alt="Foto do perfil"
                                    fill
                                    sizes="(max-width: 768px) 256px, 320px"
                                    className="object-cover"
                                    priority
                                />

                                {/* Efeito de brilho dinâmico */}
                                <motion.div
                                    className="absolute inset-0 bg-gradient-to-tr from-[#3d43dd]/40 via-transparent to-transparent mix-blend-overlay"
                                    animate={{
                                        opacity: [0, 0.5, 0],
                                        rotate: [0, 10],
                                        backgroundPosition: ['0% 0%', '100% 100%'],
                                    }}
                                    transition={{
                                        duration: 8,
                                        repeat: Infinity,
                                        repeatType: "reverse"
                                    }}
                                />

                                {/* Efeito de hover */}
                                <motion.div
                                    className="absolute inset-0 bg-[#3d43dd]/20 mix-blend-overlay"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: hoverPhoto ? 0.4 : 0 }}
                                    transition={{ duration: 0.3 }}
                                />
                            </motion.div>

                            {/* Linha decorativa com efeito de entrada */}
                            <motion.div
                                className="absolute -bottom-2 left-1/2 h-1 bg-gradient-to-r from-[#3d43dd]/0 via-[#3d43dd] to-[#3d43dd]/0 rounded-full transform -translate-x-1/2"
                                initial={{ width: 0, opacity: 0 }}
                                whileInView={{ width: 160, opacity: 0.7 }}
                                viewport={{ once: true }}
                                transition={{ delay: 0.6, duration: 0.8 }}
                            />
                        </motion.div>

                        {/* Redes sociais com efeitos específicos por plataforma */}
                        <motion.div
                            variants={staggerChildren}
                            initial="hidden"
                            whileInView="visible"
                            viewport={{ once: true }}
                            className="flex gap-6 mt-12 justify-center"
                        >
                            {socialLinks.map((link, index) => (
                                <motion.a
                                    key={link.name}
                                    href={link.url}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className={`group relative p-4 ${link.gradient
                                        ? `bg-gradient-to-br ${link.gradient} text-white`
                                        : 'bg-neutral-900/80 text-neutral-400 hover:text-white'
                                        } rounded-full transition-all hover:scale-110 hover:rotate-3 cursor-pointer backdrop-blur-sm border ${link.gradient
                                            ? 'border-white/10'
                                            : 'border-neutral-800/50 hover:border-[#3d43dd]'
                                        }`}
                                    style={link.color ? { backgroundColor: link.color, color: 'white' } : {}}
                                    aria-label={link.name}
                                    variants={fadeInUp}
                                    whileHover={{
                                        scale: link.hoverScale || 1.1,
                                        rotate: [0, -5, 5, 0],
                                        transition: { duration: 0.5 }
                                    }}
                                    onMouseEnter={textEnter}
                                    onMouseLeave={defaultCursor}
                                >
                                    <motion.span
                                        className={`absolute -inset-1 rounded-full blur opacity-0 group-hover:opacity-70 transition-opacity duration-500 ${link.gradient
                                            ? `bg-gradient-to-r ${link.gradient}`
                                            : link.color
                                                ? `bg-${link.color}`
                                                : 'bg-gradient-to-r from-[#3d43dd] to-[#6366f1]'
                                            }`}
                                    />
                                    <span className="relative">
                                        {link.icon}
                                    </span>
                                </motion.a>
                            ))}
                        </motion.div>
                    </div>

                    {/* Coluna da direita - Informações e CTA */}
                    <motion.div
                        className="lg:col-span-7"
                        variants={fadeInUp}
                        initial="hidden"
                        whileInView="visible"
                        viewport={{ once: true }}
                        transition={{ delay: 0.4 }}
                    >
                        <motion.div
                            className="bg-neutral-900/30 backdrop-blur-md rounded-3xl p-8 lg:p-10 border border-neutral-800/30 relative overflow-hidden group"
                            whileHover={{ boxShadow: "0 0 50px rgba(61, 67, 221, 0.1)" }}
                        >
                            {/* Efeito de reflexo no card */}
                            <motion.div
                                className="absolute -inset-full h-full w-1/2 z-0 transform-gpu opacity-20 group-hover:opacity-30 group-hover:transition-transform group-hover:duration-1000 bg-gradient-to-r from-transparent via-white to-transparent skew-x-[25deg]"
                                animate={{
                                    x: ['200%', '-200%'],
                                    opacity: [0, 0.1, 0]
                                }}
                                transition={{
                                    repeat: Infinity,
                                    duration: 8,
                                    ease: "easeInOut",
                                    repeatDelay: 5
                                }}
                            />

                            {/* Tag decorativa */}
                            <motion.div
                                initial={{ opacity: 0, y: 20 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                viewport={{ once: true }}
                                transition={{ duration: 0.5 }}
                                className="mb-6 relative z-10"
                            >
                                <div className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-[#3d43dd]/10 border border-[#3d43dd]/20 backdrop-blur-sm">
                                    <motion.span
                                        className="w-2 h-2 rounded-full bg-[#3d43dd]"
                                        animate={{
                                            scale: [1, 1.5, 1],
                                            opacity: [1, 0.8, 1]
                                        }}
                                        transition={{
                                            duration: 2,
                                            repeat: Infinity,
                                            repeatType: "reverse"
                                        }}
                                    />
                                    <span className="text-sm font-medium bg-gradient-to-r from-white to-neutral-300 bg-clip-text text-transparent">
                                        Desenvolvedor Full Stack
                                    </span>
                                </div>
                            </motion.div>

                            {/* Nome com efeito de gradiente animado */}
                            <motion.h1
                                initial={{ opacity: 0, y: 20 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                viewport={{ once: true }}
                                transition={{ delay: 0.2, duration: 0.5 }}
                                className="text-4xl lg:text-6xl font-bold mb-4 cursor-pointer relative z-10"
                                onMouseEnter={textEnter}
                                onMouseLeave={defaultCursor}
                            >
                                <motion.span
                                    className="bg-gradient-to-r from-[#3d43dd] via-[#6366f1] to-[#818cf8] bg-clip-text text-transparent inline-block"
                                    animate={{
                                        backgroundPosition: ['0% 50%', '100% 50%', '0% 50%'],
                                    }}
                                    transition={{
                                        duration: 10,
                                        repeat: Infinity,
                                        repeatType: "reverse"
                                    }}
                                >
                                    Wagner Pereira
                                </motion.span>
                                <motion.span
                                    className="inline-block h-9 lg:h-12 w-[3px] ml-2 bg-[#3d43dd]"
                                    animate={{
                                        opacity: [1, 0, 1],
                                        height: ["2rem", "2.5rem", "2rem"]
                                    }}
                                    transition={{
                                        duration: 1,
                                        repeat: Infinity,
                                        repeatType: "reverse",
                                        times: [0, 0.5, 1]
                                    }}
                                />
                            </motion.h1>

                            {/* Linha decorativa animada */}
                            <motion.div
                                className="h-px w-32 bg-gradient-to-r from-[#3d43dd] to-[#6366f1] rounded mb-8 relative z-10"
                                initial={{ width: 0, opacity: 0 }}
                                whileInView={{ width: 128, opacity: 1 }}
                                viewport={{ once: true }}
                                transition={{ delay: 0.3, duration: 0.5 }}
                            />

                            {/* Descrição com efeito de digitação */}
                            <motion.p
                                initial={{ opacity: 0, y: 10 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                viewport={{ once: true }}
                                transition={{ delay: 0.4, duration: 0.5 }}
                                className="text-lg text-neutral-300 mb-8 leading-relaxed relative z-10 min-h-[6rem]"
                                onMouseEnter={textEnter}
                                onMouseLeave={defaultCursor}
                            >
                                {typingText}
                                {isTypingComplete ? null : (
                                    <motion.span
                                        className="inline-block h-5 w-[3px] ml-1 bg-neutral-400"
                                        animate={{ opacity: [1, 0, 1] }}
                                        transition={{ duration: 0.8, repeat: Infinity }}
                                    />
                                )}
                            </motion.p>

                            {/* Botão de contato interativo */}
                            <motion.a
                                href="#contact"
                                initial={{ opacity: 0, y: 20 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                viewport={{ once: true }}
                                transition={{ delay: 0.5, duration: 0.5 }}
                                className="group rounded-2xl relative inline-flex items-center gap-2 px-8 py-4 overflow-hidden z-10"
                                whileHover={{ scale: 1.02 }}
                                whileTap={{ scale: 0.98 }}
                                onMouseEnter={buttonEnter}
                                onMouseLeave={defaultCursor}
                            >
                                <motion.div
                                    className="absolute -inset-2 bg-gradient-to-r from-[#3d43dd] to-[#6366f1] rounded-full opacity-70 blur-md group-hover:opacity-100 transition-opacity duration-500"
                                    animate={{
                                        backgroundPosition: ['0% 50%', '100% 50%', '0% 50%'],
                                    }}
                                    transition={{
                                        duration: 10,
                                        repeat: Infinity,
                                        repeatType: "reverse"
                                    }}
                                />
                                <div className="relative inline-flex items-center gap-2 px-6 py-3 bg-neutral-900 rounded-full text-white font-medium">
                                    <motion.svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="20"
                                        height="20"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        stroke="currentColor"
                                        strokeWidth="2"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        animate={{
                                            y: [0, -3, 0],
                                            rotate: [0, -5, 0]
                                        }}
                                        transition={{
                                            duration: 1.5,
                                            repeat: Infinity,
                                            repeatType: "reverse",
                                            delay: 1
                                        }}
                                    >
                                        <path d="M14 9a2 2 0 0 1-2 2H6l-4 4V4c0-1.1.9-2 2-2h8a2 2 0 0 1 2 2v5Z" />
                                        <path d="M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1" />
                                    </motion.svg>
                                    Entre em contato
                                </div>
                            </motion.a>
                        </motion.div>
                    </motion.div>
                </div>

                {/* Seção de tecnologias com categorias e cores personalizadas */}
                <motion.div
                    ref={techSectionRef}
                    initial={{ opacity: 0, y: 30 }}
                    animate={controls}
                    variants={{
                        visible: { opacity: 1, y: 0, transition: { duration: 0.7 } },
                        hidden: { opacity: 0, y: 30 }
                    }}
                    className="mt-24"
                >
                    {/* Título da seção */}
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        viewport={{ once: true }}
                        transition={{ duration: 0.5, delay: 0.1 }}
                        className="text-center mb-12"
                    >
                        <h2 className="text-3xl font-bold text-white">
                            <motion.span
                                className="bg-gradient-to-r from-[#3d43dd] to-[#6366f1] bg-clip-text text-transparent inline-block"
                                animate={{
                                    backgroundPosition: ['0% 50%', '100% 50%', '0% 50%'],
                                }}
                                transition={{
                                    duration: 8,
                                    repeat: Infinity,
                                    repeatType: "reverse"
                                }}
                            >
                                Tecnologias
                            </motion.span>
                            {" "}
                            <span className="relative inline-block">
                                que utilizo
                                <motion.div
                                    className="absolute -bottom-2 left-0 right-0 h-px bg-gradient-to-r from-transparent via-[#3d43dd]/50 to-transparent"
                                    initial={{ width: 0, left: "50%" }}
                                    whileInView={{ width: "100%", left: 0 }}
                                    viewport={{ once: true }}
                                    transition={{ delay: 0.3, duration: 0.6 }}
                                />
                            </span>
                        </h2>
                    </motion.div>

                    {/* Carrossel de tecnologias com efeitos 3D */}
                    <div className="relative w-full h-40 overflow-hidden rounded-2xl backdrop-blur-md border border-neutral-800/30 bg-black/20">
                        {/* Gradiente esquerdo */}
                        <div className="absolute left-0 top-0 h-full w-40 bg-gradient-to-r from-black via-black/80 to-transparent z-10" />

                        {/* Gradiente direito */}
                        <div className="absolute right-0 top-0 h-full w-40 bg-gradient-to-l from-black via-black/80 to-transparent z-10" />

                        {/* Duas camadas de carrosséis para efeito infinito mais suave */}
                        <motion.div
                            className="absolute top-0 left-0 h-full flex items-center gap-12 px-6"
                            animate={{ x: [0, -1800] }}
                            transition={{
                                duration: 90,
                                repeat: Infinity,
                                ease: "linear",
                                repeatType: "loop"
                            }}
                        >
                            {[...technologies, ...technologies, ...technologies].map((tech, index) => (
                                <motion.div
                                    key={`${tech.name}-${index}`}
                                    className="flex flex-col items-center justify-center group"
                                    initial={{ opacity: 0, scale: 0.8 }}
                                    animate={{ opacity: 1, scale: 1 }}
                                    transition={{ duration: 0.5, delay: index * 0.01 }}
                                    whileHover={{
                                        scale: 1.1,
                                        y: -5,
                                        transition: { duration: 0.2 }
                                    }}
                                >
                                    <motion.div
                                        className="w-20 h-20 relative rounded-xl bg-neutral-900/50 p-4 backdrop-blur-sm border border-neutral-800/50 group-hover:border-[#3d43dd]/30 transition-all duration-300 flex items-center justify-center"
                                        whileHover={{
                                            boxShadow: `0 0 25px ${techGlowColors[tech.category as keyof typeof techGlowColors] || '#3d43dd'}30`
                                        }}
                                    >
                                        <Image
                                            src={tech.logo}
                                            alt={tech.name}
                                            fill
                                            sizes="(max-width: 768px) 80px, 80px"
                                            className="object-contain p-2.5"
                                            priority={index < 5}
                                        />
                                        <motion.div
                                            className="absolute inset-0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                                            style={{
                                                backgroundColor: `${techGlowColors[tech.category as keyof typeof techGlowColors] || '#3d43dd'}10`
                                            }}
                                        />
                                    </motion.div>
                                    <motion.span
                                        className="mt-3 text-sm text-neutral-400 group-hover:text-white transition-colors duration-300"
                                        style={{
                                            textShadow: "0 0 10px rgba(0,0,0,0.5)"
                                        }}
                                    >
                                        {tech.name}
                                    </motion.span>
                                </motion.div>
                            ))}
                        </motion.div>
                    </div>
                </motion.div>
            </motion.div>
        </section>
    );
} 